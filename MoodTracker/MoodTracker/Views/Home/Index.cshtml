@model MoodEntryViewModel
@{
    ViewBag.Title = "New Entry";
}

<div class="container py-4">
    <div id="journalEntrySection" class="mb-5">
        <h2 class="fw-bold text-center mb-2">How are you feeling today?</h2>
        <p class="text-muted text-center mb-4">Take a moment to reflect on your thoughts and emotions</p>

        <div class="card shadow-sm p-4 mx-auto custom-card-width">
            <div class="card-body">
                <form method="post" asp-action="Index" asp-controller="Home">
                    @if (@TempData["Success"] != null)
                    {
                        <div class="text-success small">@TempData["Success"]</div>
                    }
                    <div class="text-danger" asp-validation-summary="All"></div>
                    <div class="form-floating mb-3">
                        <select class="form-select" id="floatingSelect" aria-label="Select your Mood" asp-for="Tag">
                            @foreach (var mood in Enum.GetNames(typeof(MoodTagOptions)))
                            {
                                <option value="@mood">@mood</option>
                            }
                        </select>
                        <label for="floatingSelect" asp-for="Tag">Mood right now</label>
                        <span class="text-danger small" asp-validation-for="Tag"></span>
                    </div>
                    <div class="mb-3">
                        <textarea class="form-control" asp-for="Description" rows="6" placeholder="Enter your thoughts here..."></textarea>
                        <span class="text-danger small" asp-validation-for="Description"></span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center flex-wrap mt-3">
                        <div class="text-muted small d-flex align-items-center mb-2 mb-sm-0">
                            <i class="fa-regular fa-calendar-days me-1"></i> <span id="currentDate">@DateTime.Now.ToString("dd-MM-yyyy")</span>
                            <i class="fa-regular fa-clock ms-3 me-1"></i> <span id="currentTime">@DateTime.Now.ToString("HH:mm")</span>
                        </div>
                        <button type="submit" class="btn custom-submit-btn">
                            <i class="fa-solid fa-paper-plane me-2"></i> Submit Entry
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div id="entrySavedConfirmation" class="mb-5">
        <div class="card shadow-sm p-4 mx-auto text-center custom-card-width">
            <div class="card-body">
                <div class="mb-3">
                    <i class="fa-solid fa-quote-right custom-quote-icon"></i>
                </div>
               @if (ViewBag.randomQuote != null)
                {
                    <p class="lead mb-3">@ViewBag.randomQuote.QuoteText</p>
                    <p class="text-muted small mb-4">- @ViewBag.randomQuote.Author</p>   
                }else
               {
                   <p class="lead text-danger mb-1">@TempData["ErrorMessage"]</p>
                   <p class="text-muted small mb-4">Try again!</p> 
               }
                <a asp-action="Index" asp-controller="Home" class="btn btn-primary custom-new-entry-btn" id="quoteBtn">
                    Get New Quote
                </a>
            </div>
        </div>
    </div>

    <!-- Recent Reflections Section -->
    <div class="mb-5">
        <h3 class="fw-bold mb-4 text-center">Recent Reflections</h3>
        <div class="card shadow-sm p-4 mx-auto custom-card-width">
            <div class="card-body">
                @foreach (MoodEntry moodEntry in @ViewBag.RecentMoodEntries)
                {
                    <div class="d-flex align-items-start mb-3 pb-3 border-bottom">
                        <div class="me-3 text-muted small text-nowrap flex-shrink-0">
                            <i class="fa-regular fa-calendar-days me-1"></i> @moodEntry.Created.ToString("MM/dd/yyyy")<br>
                            <i class="fa-regular fa-clock me-1"></i> @moodEntry.Created.ToString("HH:mm")
                        </div>
                        <div class="mood-legend-item">
                            @switch (@moodEntry.Tag)
                            {
                                case MoodTagOptions.Happy: 
                                    <span class="legend-dot happy-dot me-2"></span>
                                    break; 
                                case MoodTagOptions.Sad:
                                    <span class="legend-dot sad-dot me-2"></span>
                                    break;
                                case MoodTagOptions.Depressed:
                                    <span class="legend-dot depressed-dot me-2"></span>
                                    break;
                                case MoodTagOptions.Angry:
                                    <span class="legend-dot angry-dot me-2"></span>
                                    break;
                                case MoodTagOptions.Frustrated:
                                    <span class="legend-dot frustrated-dot me-2"></span>
                                    break;
                                case MoodTagOptions.Emotional:
                                    <span class="legend-dot emotional-dot me-2"></span>
                                    break;
                            }
                            <span class="text-muted">@moodEntry.Tag</span>
                            <p class="mb-0">@moodEntry.Description</p>
                        </div>
                    </div>
                }
                <p class="text-muted text-center mt-3">No more recent reflections. Make an entry!</p>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script>
        const api_url ="https://zenquotes.io/api/random/";
        async function getapi(url)
        {
            const response = await fetch(url);
            var data = await response.json();
        }
        document.querySelector("#quoteBtn").addEventListener("click", async function() {
            await getapi(api_url);
        })
    </script>
}
